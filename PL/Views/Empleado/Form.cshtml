@model ML.Empleado
@{
    ViewData["Title"] = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-6">
            <h1>Añadir Empleado</h1>
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <h5 class="text-left">Llene los campos con la información del empleado que desea registrar de acuerdo a lo que se indica.</h5>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Form", "Empleado", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="row">
                    <div class="col-md-12" >
                        <div class = "form-group" style = "display: none;">                      
                        @Html.LabelFor(model => model.IdEmpleado, new { @class = "hidden" })
                        @Html.TextBoxFor(model => model.IdEmpleado, new { @class = "hidden from-control", autocomplete = "off" })
                        @*@Html.ValidationMessageFor(model => model.IdAseguradora)*@
                    </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Nombre)
                        @*<div class="input-group">
                            <span class="input-group-addon" id="basic-addon1">@@</span>*@
                            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre", @onkeypress = "return SoloLetras(this, 'lblErrorNombre')", @autocomplete = "off" })
                            @*</div>*@
                            @Html.ValidationMessageFor(model => model.Nombre)
                            <label class="alert-danger" id="lblErrorNombre"></label>
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.ApellidoPaterno)
                        @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @id = "txtApellidoPaterno", @onkeypress = "return SoloLetras(this, 'lblErrorApellidoPaterno')", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.ApellidoPaterno)
                        <label class="alert-danger" id="lblErrorApellidoPaterno"></label>
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.ApellidoMaterno)
                        @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @id = "txtApellidoMaterno", @onkeypress = "return SoloLetras(this, 'lblErrorApellidoMaterno')", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                        <label class="alert-danger" id="lblErrorApellidoMaterno"></label>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.RFC)
                        @Html.TextBoxFor(model => model.RFC, new { @class = "form-control", @id = "txtRFC", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.RFC)
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Email)
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @id = "txtEmail", @onblur = "return ValidarEmail()", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Telefono)
                        @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @id = "txtTelefono", @onkeypress = "return SoloNumeros(this, 'lblErrorTelefono')", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.Telefono)
                         <label class="alert-danger" id="lblErrorTelefono"></label>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.FechaNacimiento)
                        @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control", autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.FechaNacimiento)                   
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.FechaIngreso)
                        @Html.TextBoxFor(model => model.FechaIngreso, new { @class = "form-control", autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.FechaIngreso) 
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.NSS)
                        @Html.TextBoxFor(model => model.NSS, new { @class = "form-control", autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.NSS) 
                    </div>
                </div>
                <br />
                
                <div class="row">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Empresa)
                        @Html.DropDownListFor(model => model.Empresa.IdEmpresa, new SelectList(Model.Empresa.Empresas, "IdEmpresa", "Nombre"), "Selecciona una empresa", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Empresa)
                    </div> 
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Poliza)
                        @Html.DropDownListFor(model => model.Poliza.IdPoliza, new SelectList(Model.Poliza.Polizas, "IdPoliza", "Nombre"), "Selecciona una poliza", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Poliza)
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Foto)
                        
                        <input type="file" name="fuImagen" onchange="readURL(this);" />
                        @if (Model.Foto != null)
                        {
                            @*<img id="ImagenPreview" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Imagen)" width="100" height="100" />*@
                            <img id="ImagenPreview" src="data:image/jpeg;base64, @Model.Foto" width="100" height="100" />
                        }
                        else
                        {
                            <img id="ImagenPreview" src="~/img/NoImage.jpg" style="height:80px; width:100px;" />
                        }
                        @Html.ValidationMessageFor(model => model.Foto)
                    </div>
                    @Html.HiddenFor(model => model.Foto)
                </div>
                <br/>
                
                <div class="row">
                    <div class="col-md-1">
                        <input type="submit" value="Guardar" class="btn btn-success">
                    </div>
                    <div class="col-md-1">
                        @Html.ActionLink("Regresar", "GetAll", "Empleado", htmlAttributes: new { @class = "btn btn-danger" } )
                    </div>
                </div>
            }

        </div>
    </div>
</div>


<script src="../../Scripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js" type="text/javascript"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js" type="text/javascript"></script>
<link href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css" rel="Stylesheet" type="text/css" />

<script>
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#ImagenPreview').attr('src', e.target.result);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }

    function SoloNumeros(e, controlId){

        var numero = e.onkeypress.arguments[0].key;
        if(!/[^0-9]/.test(numero))
        {
            $("#" + controlId).html('');
            return true;
        }
        else
        {
            $("#" + controlId).html('Solo se aceptan números');
            return false;
        }
    }

    function SoloLetras(e, controlId){

        var caracter = e.onkeypress.arguments[0].key;
        if(!/[^a-zA-Z/\s/]/.test(caracter))
        {
            $("#" + controlId).html('');          
            return true;
        }
        else
        {
            $("#" + controlId).html('Solo se aceptan letras');
            return false;
        }
    }

    function ValidarEmail(){
        var regex = /^[\w-\.]+@@([\w-]+\.)+[\w-]{2,4}$/;
        if(regex.test($('#txtEmail').val().trim()))
        {
            $("#txtEmail").css("border-color", "green");
            return true;
        }
        else
        {
            $("#txtEmail").css("border-color", "red");
            return false;
        }
    }

</script>

